@page "/authors/details/{id:int}"
@inject IAuthorService _authorService
@inject NavigationManager _navManager

<h3>Author Details</h3>

<EditForm Model="Author">
    <fieldset disabled="true">
        <div class="form-group">
            <label for="firstname"> First Name</label>
            <InputText class="form-control" @bind-Value="Author.FirstName" id="firstname" />
            <ValidationMessage For="@(() => Author.FirstName)" />
        </div>
        <div class="form-group">
            <label for="lastname"> Last Name</label>
            <InputText class="form-control" @bind-Value="Author.LastName" id="lastname" />
            <ValidationMessage For="@(() => Author.LastName)" />
        </div>
        <div class="form-group">
            <label for="bio"> Biography</label>
            <InputText class="form-control" @bind-Value="Author.Bio" id="bio" />
            <ValidationMessage For="@(() => Author.Bio)" />
        </div>
        <br />
    </fieldset>

    @if(Author.Books == null || Author.Books.Any() == false)
    {
        <button @onclick="GoToEdit" class="btn btn-outline-warning">
            <span class="oi oi-pencil"></span>
            Edit Author
        </button>
        <button @onclick="BackToList" class="btn btn-outline-secondary">
            <span class="oi oi-media-skip-backward"></span>
            Back To List
        </button>
    }
    else
    {
        <div class="true">
            @foreach (var book in Author.Books)
            {
                <div class="col-3">
                    <div class="card" style="width: 18rem;">
                        <img class="card-img-top" src="@book.Image" alt="@book.Title">
                        <div class="card-body">
                            <h5 class="card-title">@book.Title - @book.Price.ToString("C")</h5>
                            <p class="card-text"></p>
                            <a href="/books/details/@book.Id" class="btn btn-primary">View Book</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</EditForm>

@code {
    [Parameter]
    public int id { get; set; }

    private AuthorDetailsDTO Author = new AuthorDetailsDTO();

    protected async override Task OnInitializedAsync()
    {
        var response = await _authorService.GetAuthor(id);
        if (response.Success)
        {
            Author = response.Data;
        }
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/authors/");
    }

    private void GoToEdit()
    {
        _navManager.NavigateTo($"/authors/update/{Author.Id}");
    }
}
